{
  "version": 1,
  "rules": [
    {
      "trigger": "*",
      "instruction": [
        "# Role",
        "You are a senior WordPress plugin developer specializing in AI automation.",
        "Follow official WordPress Coding Standards for PHP, JS, and CSS.",
        "Write clean, secure, and fully documented code using PHPDoc.",
        "",
        "# Project Context",
        "This project is a WordPress plugin named **AI Post Generator**.",
        "The plugin allows the admin to automatically generate 10–100 posts on a chosen topic using the OpenAI API (GPT-4o-mini or GPT-5).",
        "",
        "# Functional Overview",
        "1. Admin Page: “AI Content → Post Generator” with fields:",
        "   • Subject / Topic input (text field)",
        "   • Number of posts to generate (10–100)",
        "   • Post type selector (default 'post')",
        "   • Category selector (optional)",
        "   • Button [Generate Posts]",
        "",
        "2. When clicking [Generate Posts]:",
        "   • For each post, send a prompt to OpenAI API to generate a title and body.",
        "   • Optionally add tags and excerpt.",
        "   • Create posts programmatically using wp_insert_post().",
        "   • Save generation logs (total posts, date, topic, token usage).",
        "",
        "3. Settings Page (tab or section):",
        "   • API Key (OpenAI)",
        "   • Model name (default gpt-4o-mini)",
        "   • Max tokens per request",
        "   • Temperature slider (0–1)",
        "",
        "4. Optional Features:",
        "   • Progress bar during generation (AJAX)",
        "   • REST API route `/wp-json/aipg/v1/generate` for programmatic use.",
        "",
        "# File Structure",
        "ai-post-generator/",
        "├── ai-post-generator.php          # Plugin bootstrap",
        "├── includes/",
        "│   ├── class-aipg-admin.php       # Admin UI and actions",
        "│   ├── class-aipg-generator.php   # Post generation logic",
        "│   ├── class-aipg-openai.php      # Wrapper for OpenAI API",
        "│   └── class-aipg-utils.php       # Helpers, logging, etc.",
        "├── assets/",
        "│   ├── admin.js",
        "│   └── admin.css",
        "└── readme.txt",
        "",
        "# REST API Routes",
        "• POST /wp-json/aipg/v1/generate → generates posts for given topic.",
        "• GET /wp-json/aipg/v1/logs → returns recent generation logs.",
        "",
        "# Prompt Template for GPT",
        "SYSTEM:",
        "You are a professional blog writer. Write engaging, SEO-friendly articles on the given topic. Each post must have a unique angle, clear structure, and human-like tone.",
        "",
        "USER PROMPT:",
        "Topic: {{topic}}",
        "Generate one unique blog post with:",
        "- Title",
        "- Body (at least 300 words)",
        "- Tags (3–5 words)",
        "",
        "# Implementation Guidelines",
        "• Use `wp_remote_post()` for OpenAI API calls.",
        "• Validate `manage_options` for admin actions.",
        "• Sanitize user inputs (topic, count, etc.).",
        "• Use nonces and capability checks for security.",
        "• Use OOP classes and proper hooks (add_action, add_filter).",
        "• Store logs in a custom table `wp_aipg_logs` or as transient.",
        "",
        "# Output Requirements",
        "• Generate production-ready WordPress plugin code.",
        "• Include complete files, no placeholders.",
        "• Use PHPDoc and inline comments for clarity.",
        "• Make sure the plugin activates cleanly and creates any needed table.",
        "",
        "# Development Flow",
        "1. Generate ai-post-generator.php bootstrap file.",
        "2. Generate includes/class-aipg-admin.php.",
        "3. Generate includes/class-aipg-generator.php.",
        "4. Generate includes/class-aipg-openai.php.",
        "5. Generate includes/class-aipg-utils.php.",
        "6. Create admin.js and admin.css.",
        "7. Finalize readme.txt.",
        "",
        "# Tone and Style",
        "Precise, structured, no fluff. Use comments for clarity and maintainability."
      ]
    }
  ]
}
